name: Verify keycloak-init Roles

on:
  workflow_call:

jobs:
  verify-roles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify roles
        run: |
          #!/bin/bash

          set -e

          # Function to install yq
          install_yq() {
            echo "Installing yq..."
            if [[ "$OSTYPE" == "linux-gnu"* ]]; then
              curl -L https://github.com/mikefarah/yq/releases/download/v4.19.2/yq_linux_amd64 -o /usr/local/bin/yq
              chmod +x /usr/local/bin/yq
            elif [[ "$OSTYPE" == "darwin"* ]]; then
              brew install yq
            else
              echo "Unsupported OS. Please install yq manually."
              exit 1
            fi
          }

          # Check if yq is installed
          if ! command -v yq &> /dev/null; then
            install_yq
          fi

          # Path to the YAML file
          yaml_file='./charts/keycloak-init/values.yaml'

          # Check if the YAML file exists
          if [ ! -f "$yaml_file" ]; then
            echo "File not found: $yaml_file"
            exit 1
          fi

          # Extract roles from YAML file
          echo "Extracting roles from $yaml_file..."
          roles=$(yq eval '.roles[]' "$yaml_file" 2>/dev/null || { echo "Error extracting roles from YAML file."; exit 1; })
          saroles=$(yq eval '.clients[].saroles[]' "$yaml_file" 2>/dev/null || { echo "Error extracting saroles from YAML file."; exit 1; })

          # Print extracted roles for debugging
          echo "Roles extracted:"
          echo "$roles"
          echo "SARoles extracted:"
          echo "$saroles"

          # Convert to arrays
          IFS=$'\n' read -r -d '' -a roles_array <<< "$roles"
          IFS=$'\n' read -r -d '' -a saroles_array <<< "$saroles"

          # Function to find missing and extra roles
          find_difference() {
              local array1=("${!1}")
              local array2=("${!2}")

              local missing=()
              for role in "${array2[@]}"; do
                  if [[ ! " ${array1[@]} " =~ " ${role} " ]]; then
                      missing+=("$role")
                  fi
              done

              echo "${missing[@]}"
          }

          # Find missing roles in 'roles'
          echo "Checking for roles missing from 'roles':"
          missing_roles=$(find_difference "roles_array[@]" "saroles_array[@]")
          if [ -z "$missing_roles" ]; then
              echo "No missing roles."
          else
              echo "$missing_roles"
          fi

          # Find extra roles in 'roles'
          echo "Checking for extra roles in 'roles' not found in 'saroles':"
          extra_roles=$(find_difference "saroles_array[@]" "roles_array[@]")
          if [ -z "$extra_roles" ]; then
              echo "No extra roles."
          else
              echo "$extra_roles"
          fi
          
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: "${{ github.event_name != 'pull_request' && failure() }}" # Pick up events even if the job fails or is canceled.
